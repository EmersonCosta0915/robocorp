import robocorp.log._lifecycle_hooks as @robo_lifecycle_hooks

def method():
    with @robo_lifecycle_hooks.MethodLifecycleContext(('GENERATOR', __name__, __file__, 'method', 2, {})) as @ctx:
        @ctx.before_yield_from(__name__, __file__, 'method', 3)
        x = (yield from foo())
        @ctx.after_yield_from(__name__, __file__, 'method', 3)
        @robo_lifecycle_hooks.after_assign(__name__, __file__, 'method', 3, 'x', x)
        @ctx.before_yield_from(__name__, __file__, 'method', 4)
        yield from another()
        @ctx.after_yield_from(__name__, __file__, 'method', 4)