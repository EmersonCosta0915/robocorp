import robocorp.log._lifecycle_hooks as @robo_lifecycle_hooks

def foo():
    with @robo_lifecycle_hooks.MethodLifecycleContext(('GENERATOR', __name__, __file__, 'foo', 2, {})) as @ctx:
        a = 20
        @robo_lifecycle_hooks.after_assign(__name__, __file__, 'foo', 3, 'a', a)
        if a > 10:
            @robo_lifecycle_hooks.method_if(__name__, __file__, 'if a > 10', 4, (('a', a),))
            @tmp_0 = 1
            @ctx.before_yield(__name__, __file__, 'foo', 5, @tmp_0)
            yield @tmp_0
            @ctx.after_yield(__name__, __file__, 'foo', 5)
        elif b == 10:
            @robo_lifecycle_hooks.method_if(__name__, __file__, 'elif b == 10', 6, (('b', b),))
            @tmp_1 = 2
            @ctx.before_yield(__name__, __file__, 'foo', 7, @tmp_1)
            yield @tmp_1
            @ctx.after_yield(__name__, __file__, 'foo', 7)
        else:
            @robo_lifecycle_hooks.method_else(__name__, __file__, 'else (to if b == 10)', 9, (('b', b),))
            @tmp_2 = 3
            @ctx.before_yield(__name__, __file__, 'foo', 9, @tmp_2)
            yield @tmp_2
            @ctx.after_yield(__name__, __file__, 'foo', 9)