import robocorp.log._lifecycle_hooks as @robo_lifecycle_hooks

def foo():
    with @robo_lifecycle_hooks.MethodLifecycleContext(('METHOD', __name__, __file__, 'foo', 2, {})) as @ctx:
        @ctx.report_for_start(1, ('FOR', __name__, __file__, 'for a in range(2)', 3))
        for a in range(2):
            @ctx.report_for_step_start(2, ('FOR_STEP', __name__, __file__, 'Step: for a in range(2)', 3, (('a', a),)))
            a = 20
            @robo_lifecycle_hooks.after_assign(__name__, __file__, 'foo', 4, 'a', a)
            if a > 10:
                @ctx.report_if_start(3, ('IF_SCOPE', __name__, __file__, 'if a > 10', 5, (('a', a),)))
                if a > 2:
                    @ctx.report_if_start(4, ('IF_SCOPE', __name__, __file__, 'if a > 2', 6, (('a', a),)))
                    pass
                    @ctx.report_if_end(4)
                @ctx.report_if_end(3)
            elif b == 10:
                @ctx.report_if_start(5, ('IF_SCOPE', __name__, __file__, 'elif b == 10', 8, (('b', b),)))
                pass
                @ctx.report_if_end(5)
            elif d == 10:
                @ctx.report_if_start(6, ('IF_SCOPE', __name__, __file__, 'elif d == 10', 10, (('d', d),)))
                if True:
                    @ctx.report_if_start(8, ('IF_SCOPE', __name__, __file__, 'if True', 11, None))
                    pass
                    @ctx.report_if_end(8)
                else:
                    @ctx.report_else_start(9, ('ELSE_SCOPE', __name__, __file__, 'else (to if True)', 11, None))
                    pass
                    @ctx.report_else_end(9)
                @ctx.report_if_end(6)
            else:
                @ctx.report_else_start(7, ('ELSE_SCOPE', __name__, __file__, 'else (to if d == 10)', 10, (('d', d),)))
                pass
                @ctx.report_else_end(7)
            @ctx.report_for_step_end(2)
        @ctx.report_for_end(1)